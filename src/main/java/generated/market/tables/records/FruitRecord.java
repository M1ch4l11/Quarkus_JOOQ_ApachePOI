/*
 * This file is generated by jOOQ.
 */
package generated.market.tables.records;


import generated.market.tables.Fruit;

import java.time.LocalDate;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FruitRecord extends UpdatableRecordImpl<FruitRecord> implements Record5<Integer, String, String, LocalDate, Double> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>market.Fruit.id_fruit</code>.
     */
    public void setIdFruit(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>market.Fruit.id_fruit</code>.
     */
    public Integer getIdFruit() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>market.Fruit.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>market.Fruit.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>market.Fruit.made</code>.
     */
    public void setMade(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>market.Fruit.made</code>.
     */
    public String getMade() {
        return (String) get(2);
    }

    /**
     * Setter for <code>market.Fruit.date</code>.
     */
    public void setDate(LocalDate value) {
        set(3, value);
    }

    /**
     * Getter for <code>market.Fruit.date</code>.
     */
    public LocalDate getDate() {
        return (LocalDate) get(3);
    }

    /**
     * Setter for <code>market.Fruit.kg</code>.
     */
    public void setKg(Double value) {
        set(4, value);
    }

    /**
     * Getter for <code>market.Fruit.kg</code>.
     */
    public Double getKg() {
        return (Double) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, String, String, LocalDate, Double> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, String, String, LocalDate, Double> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Fruit.FRUIT.ID_FRUIT;
    }

    @Override
    public Field<String> field2() {
        return Fruit.FRUIT.NAME;
    }

    @Override
    public Field<String> field3() {
        return Fruit.FRUIT.MADE;
    }

    @Override
    public Field<LocalDate> field4() {
        return Fruit.FRUIT.DATE;
    }

    @Override
    public Field<Double> field5() {
        return Fruit.FRUIT.KG;
    }

    @Override
    public Integer component1() {
        return getIdFruit();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getMade();
    }

    @Override
    public LocalDate component4() {
        return getDate();
    }

    @Override
    public Double component5() {
        return getKg();
    }

    @Override
    public Integer value1() {
        return getIdFruit();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getMade();
    }

    @Override
    public LocalDate value4() {
        return getDate();
    }

    @Override
    public Double value5() {
        return getKg();
    }

    @Override
    public FruitRecord value1(Integer value) {
        setIdFruit(value);
        return this;
    }

    @Override
    public FruitRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public FruitRecord value3(String value) {
        setMade(value);
        return this;
    }

    @Override
    public FruitRecord value4(LocalDate value) {
        setDate(value);
        return this;
    }

    @Override
    public FruitRecord value5(Double value) {
        setKg(value);
        return this;
    }

    @Override
    public FruitRecord values(Integer value1, String value2, String value3, LocalDate value4, Double value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FruitRecord
     */
    public FruitRecord() {
        super(Fruit.FRUIT);
    }

    /**
     * Create a detached, initialised FruitRecord
     */
    public FruitRecord(Integer idFruit, String name, String made, LocalDate date, Double kg) {
        super(Fruit.FRUIT);

        setIdFruit(idFruit);
        setName(name);
        setMade(made);
        setDate(date);
        setKg(kg);
        resetChangedOnNotNull();
    }
}
