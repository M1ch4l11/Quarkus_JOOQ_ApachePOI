/*
 * This file is generated by jOOQ.
 */
package generated.market;


import generated.market.tables.Adress;
import generated.market.tables.Customer;
import generated.market.tables.Fruit;
import generated.market.tables.Order;
import generated.market.tables.records.AdressRecord;
import generated.market.tables.records.CustomerRecord;
import generated.market.tables.records.FruitRecord;
import generated.market.tables.records.OrderRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * market.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AdressRecord> ADRESS_PKEY = Internal.createUniqueKey(Adress.ADRESS, DSL.name("adress_pkey"), new TableField[] { Adress.ADRESS.ID_ADRESS }, true);
    public static final UniqueKey<CustomerRecord> CUSTOMER_PKEY = Internal.createUniqueKey(Customer.CUSTOMER, DSL.name("customer_pkey"), new TableField[] { Customer.CUSTOMER.ID_CUSTOMER }, true);
    public static final UniqueKey<FruitRecord> FRUIT_PKEY = Internal.createUniqueKey(Fruit.FRUIT, DSL.name("fruit_pkey"), new TableField[] { Fruit.FRUIT.ID_FRUIT }, true);
    public static final UniqueKey<OrderRecord> ORDER_PKEY = Internal.createUniqueKey(Order.ORDER, DSL.name("Order_pkey"), new TableField[] { Order.ORDER.ID_ORDER }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<CustomerRecord, AdressRecord> CUSTOMER__FK_CUSTOMER_ADRESS = Internal.createForeignKey(Customer.CUSTOMER, DSL.name("fk_customer_adress"), new TableField[] { Customer.CUSTOMER.ID_ADRESS }, Keys.ADRESS_PKEY, new TableField[] { Adress.ADRESS.ID_ADRESS }, true);
    public static final ForeignKey<OrderRecord, CustomerRecord> ORDER__FK_ORDER_CUSTOMER1 = Internal.createForeignKey(Order.ORDER, DSL.name("fk_order_customer1"), new TableField[] { Order.ORDER.ID_CUSTOMER }, Keys.CUSTOMER_PKEY, new TableField[] { Customer.CUSTOMER.ID_CUSTOMER }, true);
    public static final ForeignKey<OrderRecord, FruitRecord> ORDER__FK_ORDER_FRUIT1 = Internal.createForeignKey(Order.ORDER, DSL.name("fk_order_fruit1"), new TableField[] { Order.ORDER.ID_FRUIT }, Keys.FRUIT_PKEY, new TableField[] { Fruit.FRUIT.ID_FRUIT }, true);
}
